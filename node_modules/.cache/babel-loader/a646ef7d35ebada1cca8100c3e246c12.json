{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\anaca\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Mentoria Pedro\\\\Projetos - React\\\\petshop-router\\\\src\\\\paginas\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { busca } from \"../api/api\";\nimport '../assets/css/post.css';\n\nconst Post = () => {\n  _s();\n\n  // O useHistory vai dar acesso ao histórico de navegação, \n  // e vamos fazer uma transformação nesse histórico de navegação.\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState({}); //de novo vou usar useEffect pra consumir a API\n\n  useEffect(() => {\n    busca(`/posts/${id}`, setPost).catch(() => {\n      //Aqui eu vou tratar caso o id seja invalido, se a pessoa tentar acessar uma rota /posts/qualquercoisa\n      history.push('/404'); //Com o push, colocamos na frente do “/post/88” alguma coisa, essa alguma coisa vai ser a rota /404\n    });\n  }, [id]); //vou renderizar toda vez que eu alterar o ID\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container flex flex--centro\",\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"cartao post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"cartao__titulo\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cartao__texto\",\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"+UZe5XmiMcuV7vkfA3WzIBz4XAc=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/anaca/OneDrive/Área de Trabalho/Mentoria Pedro/Projetos - React/petshop-router/src/paginas/Post.jsx"],"names":["React","useEffect","useState","useHistory","useParams","busca","Post","history","id","post","setPost","catch","push","title","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,wBAAP;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf;AACA;AACA,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;AAEA,QAAM;AAACK,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CARe,CAUf;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAAE,UAASG,EAAG,EAAd,EAAiBE,OAAjB,CAAL,CACCC,KADD,CACO,MAAM;AAAE;AACXJ,MAAAA,OAAO,CAACK,IAAR,CAAa,MAAb,EADS,CACY;AACxB,KAHD;AAIH,GALQ,EAKN,CAACJ,EAAD,CALM,CAAT,CAXe,CAgBN;;AAGT,sBACI;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA,2BACI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAAgCC,IAAI,CAACI;AAArC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA,kBAA8BJ,IAAI,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA3BD;;GAAMR,I;UAIYH,U,EAEDC,S;;;KANXE,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { busca } from \"../api/api\";\r\nimport '../assets/css/post.css'\r\n\r\n\r\nconst Post = () => {\r\n\r\n    // O useHistory vai dar acesso ao histórico de navegação, \r\n    // e vamos fazer uma transformação nesse histórico de navegação.\r\n    let history = useHistory() \r\n\r\n    const {id} = useParams()\r\n\r\n    const [post, setPost] = useState({})\r\n\r\n    //de novo vou usar useEffect pra consumir a API\r\n    useEffect(() => { \r\n        busca(`/posts/${id}`, setPost)\r\n        .catch(() => { //Aqui eu vou tratar caso o id seja invalido, se a pessoa tentar acessar uma rota /posts/qualquercoisa\r\n            history.push('/404') //Com o push, colocamos na frente do “/post/88” alguma coisa, essa alguma coisa vai ser a rota /404\r\n        }) \r\n    }, [id]) //vou renderizar toda vez que eu alterar o ID\r\n\r\n\r\n    return(\r\n        <main className=\"container flex flex--centro\">\r\n            <article className=\"cartao post\">\r\n                <h2 className=\"cartao__titulo\">{post.title}</h2>\r\n                <p className=\"cartao__texto\">{post.body}</p>\r\n            </article>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}