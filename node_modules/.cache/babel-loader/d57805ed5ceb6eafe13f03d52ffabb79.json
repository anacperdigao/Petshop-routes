{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\anaca\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Mentoria Pedro\\\\Projetos - React\\\\petshop-router\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport './assets/css/base/base.css'; // Primeiro passo: Importar as paginas que eu criei\n\nimport Home from './paginas/Home';\nimport Sobre from './paginas/Sobre';\nimport Pagina404 from './paginas/Pagina404';\nimport Cabecalho from './components/Cabecalho'; // Segundo passo: instalar a lib react-router-dom e importar aqui\n// Eu renomeei BrowserRouter para Router\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  // Passo 3: Usar o Router pra mostrar que eu terei alternancia de paginas e de rotas\n  // Passo 4: Usar Route que eu importei tbm para aninhar cada componente que será uma rota\n  // Passo 5: Dar o path de cada um no dominio web (usei exact pra prevenir um comportamento padrao do React \n  // que entende que '/' está dentro de '/sobre')\n  // Passo 6: O switch serve pra fazer o React parar de procurar outras rotas se ele ja achou a rota certa\n  // Passo 7: Agora preciso indicar caso a pessoa tente acessar uma rota que nao existe, entao vou criar uma nova\n  // página chamada \"Pagina 404.jsx\". IR PARA LA. Na <Pagina404> eu nao vou indicar caminho pq eu vou dizer que\n  // qualquer caminho sem ser os que existem, vão direcionar pra la.\n  // Passo 8 foi criar o componente Cabecalho que la tinha o caminho das rotas para usar. Agora vou importar aqui.\n  // Passo 9: Inserir o componente antes do Switch, assim eu garanto que ele vai englobar todas as rotas.\n  // Passo 10: Esta acontencendo um problema que o react ta chamando o index.html toda vez que eu mudo a rota,\n  // e para isso eu vou voltar no componente Cabecalho e vou trocar o <a> por <link>, e aí sim ele nao vai chamar \n  // pelo index.html toda vez. Ou seja, o <Link> faz o papel do ancora <a> só que sem recarregar a pagina toda hora.\n  // Passo 11: Agora vou consumir uma API do arquivo local chamado db.json e pra isso preciso instalar no node.js\n  // o seguinte comando \"npx json-server --watch db.json --port 5000\". Isso é para alimentar os posts do blog.\n  // Passo 12: Criar um arquivo chamado api.js \n  // Passo 13: Verificar se ja tem a biblioteca axios instalada pq é ela que faz a conexao com a API.\n  // Passo 14: Criar um componente de ListaPost para pegar os dados da API.\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Cabecalho, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sobre\",\n        children: /*#__PURE__*/_jsxDEV(Sobre, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(Pagina404, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/anaca/OneDrive/Área de Trabalho/Mentoria Pedro/Projetos - React/petshop-router/src/App.jsx"],"names":["React","Home","Sobre","Pagina404","Cabecalho","BrowserRouter","Router","Route","Switch","App"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAEA;AACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;;AAGA,SAASC,GAAT,GAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,8BAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eAUE,QAAC,KAAD;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;KAzCQA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport './assets/css/base/base.css'\n\n// Primeiro passo: Importar as paginas que eu criei\nimport Home from './paginas/Home'\nimport Sobre from './paginas/Sobre'\nimport Pagina404 from './paginas/Pagina404'\nimport Cabecalho from './components/Cabecalho'\n\n// Segundo passo: instalar a lib react-router-dom e importar aqui\n// Eu renomeei BrowserRouter para Router\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n\nfunction App() {\n// Passo 3: Usar o Router pra mostrar que eu terei alternancia de paginas e de rotas\n// Passo 4: Usar Route que eu importei tbm para aninhar cada componente que será uma rota\n// Passo 5: Dar o path de cada um no dominio web (usei exact pra prevenir um comportamento padrao do React \n// que entende que '/' está dentro de '/sobre')\n// Passo 6: O switch serve pra fazer o React parar de procurar outras rotas se ele ja achou a rota certa\n// Passo 7: Agora preciso indicar caso a pessoa tente acessar uma rota que nao existe, entao vou criar uma nova\n// página chamada \"Pagina 404.jsx\". IR PARA LA. Na <Pagina404> eu nao vou indicar caminho pq eu vou dizer que\n// qualquer caminho sem ser os que existem, vão direcionar pra la.\n// Passo 8 foi criar o componente Cabecalho que la tinha o caminho das rotas para usar. Agora vou importar aqui.\n// Passo 9: Inserir o componente antes do Switch, assim eu garanto que ele vai englobar todas as rotas.\n// Passo 10: Esta acontencendo um problema que o react ta chamando o index.html toda vez que eu mudo a rota,\n// e para isso eu vou voltar no componente Cabecalho e vou trocar o <a> por <link>, e aí sim ele nao vai chamar \n// pelo index.html toda vez. Ou seja, o <Link> faz o papel do ancora <a> só que sem recarregar a pagina toda hora.\n// Passo 11: Agora vou consumir uma API do arquivo local chamado db.json e pra isso preciso instalar no node.js\n// o seguinte comando \"npx json-server --watch db.json --port 5000\". Isso é para alimentar os posts do blog.\n// Passo 12: Criar um arquivo chamado api.js \n// Passo 13: Verificar se ja tem a biblioteca axios instalada pq é ela que faz a conexao com a API.\n// Passo 14: Criar um componente de ListaPost para pegar os dados da API.\n\n\n  return (\n    <Router>\n      <Cabecalho />\n      <Switch>\n\n        <Route exact path='/'>\n          <Home />\n        </Route>\n        \n        <Route path='/sobre'>\n          <Sobre />\n        </Route>\n        \n        <Route>\n          <Pagina404 />\n        </Route>\n\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}